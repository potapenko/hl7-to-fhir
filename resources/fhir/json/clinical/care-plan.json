{
  "resourceType" : "CarePlan",
  // from Resource: id, meta, implicitRules, and language
  // from DomainResource: text, contained, extension, and modifierExtension
  "identifier" : [{ Identifier }], // External Ids for this plan
  "instantiatesCanonical" : [{ canonical(PlanDefinition|Questionnaire|Measure|
   ActivityDefinition|OperationDefinition) }], // Instantiates FHIR protocol or definition
  "instantiatesUri" : ["<uri>"], // Instantiates external protocol or definition
  "basedOn" : [{ Reference(CarePlan) }], // Fulfills CarePlan
  "replaces" : [{ Reference(CarePlan) }], // CarePlan replaced by this CarePlan
  "partOf" : [{ Reference(CarePlan) }], // Part of referenced CarePlan
  "status" : "<code>", // R!  draft | active | suspended | completed | entered-in-error | cancelled | unknown
  "intent" : "<code>", // R!  proposal | plan | order | option
  "category" : [{ CodeableConcept }], // Type of plan
  "title" : "<string>", // Human-friendly name for the care plan
  "description" : "<string>", // Summary of nature of plan
  "subject" : { Reference(Patient|Group) }, // R!  Who the care plan is for
  "encounter" : { Reference(Encounter) }, // Encounter created as part of
  "period" : { Period }, // Time period plan covers
  "created" : "<dateTime>", // Date record was first recorded
  "author" : { Reference(Patient|Practitioner|PractitionerRole|Device|
   RelatedPerson|Organization|CareTeam) }, // Who is the designated responsible party
  "contributor" : [{ Reference(Patient|Practitioner|PractitionerRole|Device|
   RelatedPerson|Organization|CareTeam) }], // Who provided the content of the care plan
  "careTeam" : [{ Reference(CareTeam) }], // Who's involved in plan?
  "addresses" : [{ Reference(Condition) }], // Health issues this plan addresses
  "supportingInfo" : [{ Reference(Any) }], // Information considered as part of plan
  "goal" : [{ Reference(Goal) }], // Desired outcome of plan
  "activity" : [{ // Action to occur as part of plan
    "outcomeCodeableConcept" : [{ CodeableConcept }], // Results of the activity
    "outcomeReference" : [{ Reference(Any) }], // Appointment, Encounter, Procedure, etc.
    "progress" : [{ Annotation }], // Comments about the activity status/progress
    "reference" : { Reference(Appointment|CommunicationRequest|DeviceRequest|
    MedicationRequest|NutritionOrder|Task|ServiceRequest|VisionPrescription|
    RequestGroup) }, // C? Activity details defined in specific resource
    "detail" : { // C? In-line definition of activity
      "kind" : "<code>", // Kind of resource
      "instantiatesCanonical" : [{ canonical(PlanDefinition|ActivityDefinition|
     Questionnaire|Measure|OperationDefinition) }], // Instantiates FHIR protocol or definition
      "instantiatesUri" : ["<uri>"], // Instantiates external protocol or definition
      "code" : { CodeableConcept }, // Detail type of activity
      "reasonCode" : [{ CodeableConcept }], // Why activity should be done or why activity was prohibited
      "reasonReference" : [{ Reference(Condition|Observation|DiagnosticReport|
     DocumentReference) }], // Why activity is needed
      "goal" : [{ Reference(Goal) }], // Goals this activity relates to
      "status" : "<code>", // R!  not-started | scheduled | in-progress | on-hold | completed | cancelled | stopped | unknown | entered-in-error
      "statusReason" : { CodeableConcept }, // Reason for current status
      "doNotPerform" : <boolean>, // If true, activity is prohibiting action
      // scheduled[x]: When activity is to occur. One of these 3:
      "scheduledTiming" : { Timing },
      "scheduledPeriod" : { Period },
      "scheduledString" : "<string>",
      "location" : { Reference(Location) }, // Where it should happen
      "performer" : [{ Reference(Practitioner|PractitionerRole|Organization|
     RelatedPerson|Patient|CareTeam|HealthcareService|Device) }], // Who will be responsible?
      // product[x]: What is to be administered/supplied. One of these 2:
      "productCodeableConcept" : { CodeableConcept },
      "productReference" : { Reference(Medication|Substance) },
      "dailyAmount" : { Quantity(SimpleQuantity) }, // How to consume/day?
      "quantity" : { Quantity(SimpleQuantity) }, // How much to administer/supply/consume
      "description" : "<string>" // Extra info describing activity to perform
    }
  }],
  "note" : [{ Annotation }] // Comments about the plan
}
